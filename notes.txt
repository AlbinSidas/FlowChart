 
Relaterat till funktionsdefinition
tänk this.functionVariables = funcdefAPI.getTemplateFill(this.id); då hämtas funktionsdefinition variabelfyllningen för den här nodens id
//     async updateVariableTemplate(nodeId, variables) {
//         return fetch(`${this.baseURL}/variables/${nodeId}`, 
//         {
//             method:   'PUT',
//             headers:  {
//                 'Content-Type': 'application/json'
//             },
//             body: JSON.stringify(variables)
//         }).then(response => response.json())
//           .then(response => response.data)
//           .catch((error) => {
//             // Handle error
//             coFunctionDefinitionTemplatensole.log("Fail", error);
//         });
//     } 

//    async getVariables(nodeId) {
//        return fetch(`${this.baseURL}/variables/${nodeId}`, 
//         {
//             method:   'GET',
//             headers:  {
//                 'Content-Type': 'application/json'
//             }
//         }).then((response) => {
//             // Confirm save
//             console.log("success", response.json().data);
            
//         }).catch((error) => {
//             // Handle error
//             console.log("Fail", error);
//         });
//     }


Hur vi sparade innan:
    /*  
          {
        id : {functionvariable}, 
    }
    */
        // fs.writeFile("./saved/"+req.body.filename+".json", JSON.stringify(req.body.data),function (err) {
        //     if (err) throw err;
        //     console.log('File is created successfully.');
        //   }); 
        // res.send("slurp");